#
# name: 张祥东
# ID  : 521030910206
# 4.10

    .pos 0
init:
    irmovl Stack, %esp
    irmovl Stack, %ebp
    call Main
    halt

    # Sample linked list
    .align 4 
ele1:   # ebp
    .long 0x00a
    .long ele2
ele2:
    .long 0x0b0
    .long ele3
ele3:
    .long 0xc00
    .long 0

Main:   pushl %ebp
    rrmovl %esp, %ebp 

    irmovl ele1,%edx
    pushl %edx # asum(*start)
    call rsum
    rrmovl %ebp,%esp 
    popl %ebp 
    ret

rsum:   pushl %ebp
    rrmovl %esp, %ebp

    mrmovl 8(%ebp), %ecx # ecx = start,pointer !
    xorl %edx, %edx # val = 0 可以用栈 

    xorl %ebx, %ebx
    subl %ebx, %ecx # eax
    je ZERO


    mrmovl (%ecx), %edx
    pushl %edx # store the res
    
    pushl %ebp # preparation
    rrmovl %esp, %ebp

    mrmovl 4(%ecx), %ecx
    pushl %ecx
    call rsum # rsum(*start->next)
    rrmovl %ebp, %esp # is this normal method to solve the recursive function that
    # pushl first and when back,the value is backed
    popl %ebp

    popl %edx # get the previous value
ZERO:   rrmovl %ebp, %esp
    popl %ebp 
    addl %edx, %eax # ret += val
    ret


    .pos 0x400
Stack:  # 已经指定起始位置，downward生长这不会有问题吗
