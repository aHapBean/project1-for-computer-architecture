                      | # name: 张祥东
                      | # ID  : 521030910206
                      | # 4.10
                      | 
  0x000:              |     .pos 0
  0x000: 30f400040000 | init:   irmovl Stack, %esp
  0x006: 30f500040000 |     irmovl Stack, %ebp
  0x00c: 802c000000   |     call Main
  0x011: 00           |     halt
                      | 
                      |     # Sample linked list
  0x014:              |     .align 4 
  0x014:              | ele1:   # ebp
  0x014: 0a000000     |     .long 0x00a
  0x018: 1c000000     |     .long ele2
  0x01c:              | ele2:
  0x01c: b0000000     |     .long 0x0b0
  0x020: 24000000     |     .long ele3
  0x024:              | ele3:
  0x024: 000c0000     |     .long 0xc00
  0x028: 00000000     |     .long 0
                      | 
  0x02c: a05f         | Main:   pushl %ebp # enter function,record ebp
  0x02e: 2045         |     rrmovl %esp, %ebp # 它的esp是下一个的ebp ！！！
                      | 
  0x030: 30f214000000 |     irmovl ele1,%edx
  0x036: a02f         |     pushl %edx # asum(*start)
  0x038: 8042000000   |     call sum
  0x03d: 2054         |     rrmovl %ebp,%esp # 恢复esp
  0x03f: b05f         |     popl %ebp # 恢复ebp,为调用它的函数恢复esp做准备
  0x041: 90           |     ret
                      |     # %ebp有啥用？，maybe可以指示当前函数的base
                      | 
  0x042: a05f         | sum:   pushl %ebp# 少了特判！
  0x044: 2045         |     rrmovl %esp, %ebp
                      |     # ???
  0x046: 501508000000 |     mrmovl 8(%ebp), %ecx # ecx = start,pointer !
  0x04c: 6300         |     xorl %eax, %eax # sum = 0
  0x04e: 502104000000 |     mrmovl 4(%ecx), %edx
                      |     
  0x054: 30f300000000 |     irmovl $0, %ebx
  0x05a: 6132         |     subl %ebx,%edx
  0x05c: 737c000000   |     je End
  0x061: 506100000000 | Loop:   mrmovl (%ecx), %esi # get the value
  0x067: 6060         |     addl %esi, %eax
  0x069: 501104000000 |     mrmovl 4(%ecx),%ecx # %ecx = %ecx -> next
                      |     
  0x06f: 30f300000000 |     irmovl $0, %ebx
  0x075: 6131         |     subl %ebx, %ecx
  0x077: 7461000000   |     jne Loop
                      |     # ret is in %eax 
                      | 
  0x07c: 2054         | End:    rrmovl %ebp, %esp
  0x07e: b05f         |     popl %ebp # 上一级的ebp给它恢复
  0x080: 90           |     ret
                      | 
  0x400:              |     .pos 0x400
  0x400:              | Stack:
                      | # a empty line !
